;  Generated by PSoC Designer 5.4.3191
;
;
;  PSoCGPIOINT.inc
;
;  Data: 29 October, 2001
;  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
;
;  This file is generated by the Device Editor on Application Generation.
;  It contains equates that are useful in writing code relating to GPIO
;  related interrupts.
;  
;  DO NOT EDIT THIS FILE MANUALLY, AS IT IS OVERWRITTEN!!!
;  Edits to this file will not be preserved.
;
; CY_IRQPin address and mask equates
CY_IRQPin_Data_ADDR:	equ	0h
CY_IRQPin_DriveMode_0_ADDR:	equ	100h
CY_IRQPin_DriveMode_1_ADDR:	equ	101h
CY_IRQPin_DriveMode_2_ADDR:	equ	3h
CY_IRQPin_GlobalSelect_ADDR:	equ	2h
CY_IRQPin_IntCtrl_0_ADDR:	equ	102h
CY_IRQPin_IntCtrl_1_ADDR:	equ	103h
CY_IRQPin_IntEn_ADDR:	equ	1h
CY_IRQPin_MASK:	equ	40h
CY_IRQPin_MUXBusCtrl_ADDR:	equ	1d8h
; CY_IRQPin_Data access macros
;   GetCY_IRQPin_Data macro, return in a
macro GetCY_IRQPin_Data
	mov		a,[Port_0_Data_SHADE]
	and		a, 40h
endm
;   SetCY_IRQPin_Data macro
macro SetCY_IRQPin_Data
	or		[Port_0_Data_SHADE], 40h
	mov		a, [Port_0_Data_SHADE]
	mov		reg[CY_IRQPin_Data_ADDR], a
endm
;   ClearCY_IRQPin_Data macro
macro ClearCY_IRQPin_Data
	and		[Port_0_Data_SHADE], ~40h
	mov		a, [Port_0_Data_SHADE]
	mov		reg[CY_IRQPin_Data_ADDR], a
endm

; MISOPin address and mask equates
MISOPin_Data_ADDR:	equ	0h
MISOPin_DriveMode_0_ADDR:	equ	100h
MISOPin_DriveMode_1_ADDR:	equ	101h
MISOPin_DriveMode_2_ADDR:	equ	3h
MISOPin_GlobalSelect_ADDR:	equ	2h
MISOPin_IntCtrl_0_ADDR:	equ	102h
MISOPin_IntCtrl_1_ADDR:	equ	103h
MISOPin_IntEn_ADDR:	equ	1h
MISOPin_MASK:	equ	1h
MISOPin_MUXBusCtrl_ADDR:	equ	1d8h
; MISOPin_Data access macros
;   GetMISOPin_Data macro, return in a
macro GetMISOPin_Data
	mov		a,[Port_0_Data_SHADE]
	and		a, 1h
endm
;   SetMISOPin_Data macro
macro SetMISOPin_Data
	or		[Port_0_Data_SHADE], 1h
	mov		a, [Port_0_Data_SHADE]
	mov		reg[MISOPin_Data_ADDR], a
endm
;   ClearMISOPin_Data macro
macro ClearMISOPin_Data
	and		[Port_0_Data_SHADE], ~1h
	mov		a, [Port_0_Data_SHADE]
	mov		reg[MISOPin_Data_ADDR], a
endm

; SCK_Pin address and mask equates
SCK_Pin_Data_ADDR:	equ	0h
SCK_Pin_DriveMode_0_ADDR:	equ	100h
SCK_Pin_DriveMode_1_ADDR:	equ	101h
SCK_Pin_DriveMode_2_ADDR:	equ	3h
SCK_Pin_GlobalSelect_ADDR:	equ	2h
SCK_Pin_IntCtrl_0_ADDR:	equ	102h
SCK_Pin_IntCtrl_1_ADDR:	equ	103h
SCK_Pin_IntEn_ADDR:	equ	1h
SCK_Pin_MASK:	equ	8h
SCK_Pin_MUXBusCtrl_ADDR:	equ	1d8h
; SCK_Pin_Data access macros
;   GetSCK_Pin_Data macro, return in a
macro GetSCK_Pin_Data
	mov		a,[Port_0_Data_SHADE]
	and		a, 8h
endm
;   SetSCK_Pin_Data macro
macro SetSCK_Pin_Data
	or		[Port_0_Data_SHADE], 8h
	mov		a, [Port_0_Data_SHADE]
	mov		reg[SCK_Pin_Data_ADDR], a
endm
;   ClearSCK_Pin_Data macro
macro ClearSCK_Pin_Data
	and		[Port_0_Data_SHADE], ~8h
	mov		a, [Port_0_Data_SHADE]
	mov		reg[SCK_Pin_Data_ADDR], a
endm

; RSTPin address and mask equates
RSTPin_Data_ADDR:	equ	0h
RSTPin_DriveMode_0_ADDR:	equ	100h
RSTPin_DriveMode_1_ADDR:	equ	101h
RSTPin_DriveMode_2_ADDR:	equ	3h
RSTPin_GlobalSelect_ADDR:	equ	2h
RSTPin_IntCtrl_0_ADDR:	equ	102h
RSTPin_IntCtrl_1_ADDR:	equ	103h
RSTPin_IntEn_ADDR:	equ	1h
RSTPin_MASK:	equ	10h
RSTPin_MUXBusCtrl_ADDR:	equ	1d8h
; RSTPin_Data access macros
;   GetRSTPin_Data macro, return in a
macro GetRSTPin_Data
	mov		a,[Port_0_Data_SHADE]
	and		a, 10h
endm
;   SetRSTPin_Data macro
macro SetRSTPin_Data
	or		[Port_0_Data_SHADE], 10h
	mov		a, [Port_0_Data_SHADE]
	mov		reg[RSTPin_Data_ADDR], a
endm
;   ClearRSTPin_Data macro
macro ClearRSTPin_Data
	and		[Port_0_Data_SHADE], ~10h
	mov		a, [Port_0_Data_SHADE]
	mov		reg[RSTPin_Data_ADDR], a
endm

; MOSI_Pin address and mask equates
MOSI_Pin_Data_ADDR:	equ	0h
MOSI_Pin_DriveMode_0_ADDR:	equ	100h
MOSI_Pin_DriveMode_1_ADDR:	equ	101h
MOSI_Pin_DriveMode_2_ADDR:	equ	3h
MOSI_Pin_GlobalSelect_ADDR:	equ	2h
MOSI_Pin_IntCtrl_0_ADDR:	equ	102h
MOSI_Pin_IntCtrl_1_ADDR:	equ	103h
MOSI_Pin_IntEn_ADDR:	equ	1h
MOSI_Pin_MASK:	equ	20h
MOSI_Pin_MUXBusCtrl_ADDR:	equ	1d8h
; MOSI_Pin_Data access macros
;   GetMOSI_Pin_Data macro, return in a
macro GetMOSI_Pin_Data
	mov		a,[Port_0_Data_SHADE]
	and		a, 20h
endm
;   SetMOSI_Pin_Data macro
macro SetMOSI_Pin_Data
	or		[Port_0_Data_SHADE], 20h
	mov		a, [Port_0_Data_SHADE]
	mov		reg[MOSI_Pin_Data_ADDR], a
endm
;   ClearMOSI_Pin_Data macro
macro ClearMOSI_Pin_Data
	and		[Port_0_Data_SHADE], ~20h
	mov		a, [Port_0_Data_SHADE]
	mov		reg[MOSI_Pin_Data_ADDR], a
endm

; CS_PINPin address and mask equates
CS_PINPin_Data_ADDR:	equ	0h
CS_PINPin_DriveMode_0_ADDR:	equ	100h
CS_PINPin_DriveMode_1_ADDR:	equ	101h
CS_PINPin_DriveMode_2_ADDR:	equ	3h
CS_PINPin_GlobalSelect_ADDR:	equ	2h
CS_PINPin_IntCtrl_0_ADDR:	equ	102h
CS_PINPin_IntCtrl_1_ADDR:	equ	103h
CS_PINPin_IntEn_ADDR:	equ	1h
CS_PINPin_MASK:	equ	80h
CS_PINPin_MUXBusCtrl_ADDR:	equ	1d8h
; CS_PINPin_Data access macros
;   GetCS_PINPin_Data macro, return in a
macro GetCS_PINPin_Data
	mov		a,[Port_0_Data_SHADE]
	and		a, 80h
endm
;   SetCS_PINPin_Data macro
macro SetCS_PINPin_Data
	or		[Port_0_Data_SHADE], 80h
	mov		a, [Port_0_Data_SHADE]
	mov		reg[CS_PINPin_Data_ADDR], a
endm
;   ClearCS_PINPin_Data macro
macro ClearCS_PINPin_Data
	and		[Port_0_Data_SHADE], ~80h
	mov		a, [Port_0_Data_SHADE]
	mov		reg[CS_PINPin_Data_ADDR], a
endm

; LED_1_0Pin address and mask equates
LED_1_0Pin_Data_ADDR:	equ	4h
LED_1_0Pin_DriveMode_0_ADDR:	equ	104h
LED_1_0Pin_DriveMode_1_ADDR:	equ	105h
LED_1_0Pin_DriveMode_2_ADDR:	equ	7h
LED_1_0Pin_GlobalSelect_ADDR:	equ	6h
LED_1_0Pin_IntCtrl_0_ADDR:	equ	106h
LED_1_0Pin_IntCtrl_1_ADDR:	equ	107h
LED_1_0Pin_IntEn_ADDR:	equ	5h
LED_1_0Pin_MASK:	equ	1h
LED_1_0Pin_MUXBusCtrl_ADDR:	equ	1d9h
; LED_1_0Pin_Data access macros
;   GetLED_1_0Pin_Data macro, return in a
macro GetLED_1_0Pin_Data
	mov		a,[Port_1_Data_SHADE]
	and		a, 1h
endm
;   SetLED_1_0Pin_Data macro
macro SetLED_1_0Pin_Data
	or		[Port_1_Data_SHADE], 1h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_1_0Pin_Data_ADDR], a
endm
;   ClearLED_1_0Pin_Data macro
macro ClearLED_1_0Pin_Data
	and		[Port_1_Data_SHADE], ~1h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_1_0Pin_Data_ADDR], a
endm

; LED_1_4Pin address and mask equates
LED_1_4Pin_Data_ADDR:	equ	4h
LED_1_4Pin_DriveMode_0_ADDR:	equ	104h
LED_1_4Pin_DriveMode_1_ADDR:	equ	105h
LED_1_4Pin_DriveMode_2_ADDR:	equ	7h
LED_1_4Pin_GlobalSelect_ADDR:	equ	6h
LED_1_4Pin_IntCtrl_0_ADDR:	equ	106h
LED_1_4Pin_IntCtrl_1_ADDR:	equ	107h
LED_1_4Pin_IntEn_ADDR:	equ	5h
LED_1_4Pin_MASK:	equ	10h
LED_1_4Pin_MUXBusCtrl_ADDR:	equ	1d9h
; LED_1_4Pin_Data access macros
;   GetLED_1_4Pin_Data macro, return in a
macro GetLED_1_4Pin_Data
	mov		a,[Port_1_Data_SHADE]
	and		a, 10h
endm
;   SetLED_1_4Pin_Data macro
macro SetLED_1_4Pin_Data
	or		[Port_1_Data_SHADE], 10h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_1_4Pin_Data_ADDR], a
endm
;   ClearLED_1_4Pin_Data macro
macro ClearLED_1_4Pin_Data
	and		[Port_1_Data_SHADE], ~10h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_1_4Pin_Data_ADDR], a
endm

; LED_1_5Pin address and mask equates
LED_1_5Pin_Data_ADDR:	equ	4h
LED_1_5Pin_DriveMode_0_ADDR:	equ	104h
LED_1_5Pin_DriveMode_1_ADDR:	equ	105h
LED_1_5Pin_DriveMode_2_ADDR:	equ	7h
LED_1_5Pin_GlobalSelect_ADDR:	equ	6h
LED_1_5Pin_IntCtrl_0_ADDR:	equ	106h
LED_1_5Pin_IntCtrl_1_ADDR:	equ	107h
LED_1_5Pin_IntEn_ADDR:	equ	5h
LED_1_5Pin_MASK:	equ	20h
LED_1_5Pin_MUXBusCtrl_ADDR:	equ	1d9h
; LED_1_5Pin_Data access macros
;   GetLED_1_5Pin_Data macro, return in a
macro GetLED_1_5Pin_Data
	mov		a,[Port_1_Data_SHADE]
	and		a, 20h
endm
;   SetLED_1_5Pin_Data macro
macro SetLED_1_5Pin_Data
	or		[Port_1_Data_SHADE], 20h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_1_5Pin_Data_ADDR], a
endm
;   ClearLED_1_5Pin_Data macro
macro ClearLED_1_5Pin_Data
	and		[Port_1_Data_SHADE], ~20h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_1_5Pin_Data_ADDR], a
endm

; LED_1_6Pin address and mask equates
LED_1_6Pin_Data_ADDR:	equ	4h
LED_1_6Pin_DriveMode_0_ADDR:	equ	104h
LED_1_6Pin_DriveMode_1_ADDR:	equ	105h
LED_1_6Pin_DriveMode_2_ADDR:	equ	7h
LED_1_6Pin_GlobalSelect_ADDR:	equ	6h
LED_1_6Pin_IntCtrl_0_ADDR:	equ	106h
LED_1_6Pin_IntCtrl_1_ADDR:	equ	107h
LED_1_6Pin_IntEn_ADDR:	equ	5h
LED_1_6Pin_MASK:	equ	40h
LED_1_6Pin_MUXBusCtrl_ADDR:	equ	1d9h
; LED_1_6Pin_Data access macros
;   GetLED_1_6Pin_Data macro, return in a
macro GetLED_1_6Pin_Data
	mov		a,[Port_1_Data_SHADE]
	and		a, 40h
endm
;   SetLED_1_6Pin_Data macro
macro SetLED_1_6Pin_Data
	or		[Port_1_Data_SHADE], 40h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_1_6Pin_Data_ADDR], a
endm
;   ClearLED_1_6Pin_Data macro
macro ClearLED_1_6Pin_Data
	and		[Port_1_Data_SHADE], ~40h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_1_6Pin_Data_ADDR], a
endm

; LED_1_7Pin address and mask equates
LED_1_7Pin_Data_ADDR:	equ	4h
LED_1_7Pin_DriveMode_0_ADDR:	equ	104h
LED_1_7Pin_DriveMode_1_ADDR:	equ	105h
LED_1_7Pin_DriveMode_2_ADDR:	equ	7h
LED_1_7Pin_GlobalSelect_ADDR:	equ	6h
LED_1_7Pin_IntCtrl_0_ADDR:	equ	106h
LED_1_7Pin_IntCtrl_1_ADDR:	equ	107h
LED_1_7Pin_IntEn_ADDR:	equ	5h
LED_1_7Pin_MASK:	equ	80h
LED_1_7Pin_MUXBusCtrl_ADDR:	equ	1d9h
; LED_1_7Pin_Data access macros
;   GetLED_1_7Pin_Data macro, return in a
macro GetLED_1_7Pin_Data
	mov		a,[Port_1_Data_SHADE]
	and		a, 80h
endm
;   SetLED_1_7Pin_Data macro
macro SetLED_1_7Pin_Data
	or		[Port_1_Data_SHADE], 80h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_1_7Pin_Data_ADDR], a
endm
;   ClearLED_1_7Pin_Data macro
macro ClearLED_1_7Pin_Data
	and		[Port_1_Data_SHADE], ~80h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_1_7Pin_Data_ADDR], a
endm

; LED_1Pin address and mask equates
LED_1Pin_Data_ADDR:	equ	ch
LED_1Pin_DriveMode_0_ADDR:	equ	10ch
LED_1Pin_DriveMode_1_ADDR:	equ	10dh
LED_1Pin_DriveMode_2_ADDR:	equ	fh
LED_1Pin_GlobalSelect_ADDR:	equ	eh
LED_1Pin_IntCtrl_0_ADDR:	equ	10eh
LED_1Pin_IntCtrl_1_ADDR:	equ	10fh
LED_1Pin_IntEn_ADDR:	equ	dh
LED_1Pin_MASK:	equ	1h
LED_1Pin_MUXBusCtrl_ADDR:	equ	1dbh
; LED_1Pin_Data access macros
;   GetLED_1Pin_Data macro, return in a
macro GetLED_1Pin_Data
	mov		a,[Port_3_Data_SHADE]
	and		a, 1h
endm
;   SetLED_1Pin_Data macro
macro SetLED_1Pin_Data
	or		[Port_3_Data_SHADE], 1h
	mov		a, [Port_3_Data_SHADE]
	mov		reg[LED_1Pin_Data_ADDR], a
endm
;   ClearLED_1Pin_Data macro
macro ClearLED_1Pin_Data
	and		[Port_3_Data_SHADE], ~1h
	mov		a, [Port_3_Data_SHADE]
	mov		reg[LED_1Pin_Data_ADDR], a
endm

; Bind_Port address and mask equates
Bind_Port_Data_ADDR:	equ	ch
Bind_Port_DriveMode_0_ADDR:	equ	10ch
Bind_Port_DriveMode_1_ADDR:	equ	10dh
Bind_Port_DriveMode_2_ADDR:	equ	fh
Bind_Port_GlobalSelect_ADDR:	equ	eh
Bind_Port_IntCtrl_0_ADDR:	equ	10eh
Bind_Port_IntCtrl_1_ADDR:	equ	10fh
Bind_Port_IntEn_ADDR:	equ	dh
Bind_Port_MASK:	equ	4h
Bind_Port_MUXBusCtrl_ADDR:	equ	1dbh
; Bind_Port_Data access macros
;   GetBind_Port_Data macro, return in a
macro GetBind_Port_Data
	mov		a,[Port_3_Data_SHADE]
	and		a, 4h
endm
;   SetBind_Port_Data macro
macro SetBind_Port_Data
	or		[Port_3_Data_SHADE], 4h
	mov		a, [Port_3_Data_SHADE]
	mov		reg[Bind_Port_Data_ADDR], a
endm
;   ClearBind_Port_Data macro
macro ClearBind_Port_Data
	and		[Port_3_Data_SHADE], ~4h
	mov		a, [Port_3_Data_SHADE]
	mov		reg[Bind_Port_Data_ADDR], a
endm

